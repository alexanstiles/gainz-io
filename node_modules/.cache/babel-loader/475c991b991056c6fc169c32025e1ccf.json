{"ast":null,"code":"var _jsxFileName = \"/Users/alexstiles/Desktop/AI/gainz/src/App.js\";\nimport React from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Select from \"@material-ui/core/Select\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Button from \"@material-ui/core/Button\";\n\nfunction App() {\n  function markovMe() {\n    const markovChain = {};\n    const textArr = document.getElementById(\"inputBox\").value.split(\" \");\n\n    for (let i = 0; i < textArr.length; i++) {\n      let word = textArr[i].toLowerCase().replace(/[\\W_]/, \"\");\n\n      if (!markovChain[word]) {\n        markovChain[word] = [];\n      }\n\n      if (textArr[i + 1]) {\n        markovChain[word].push(textArr[i + 1].toLowerCase().replace(/[\\W_]/, \"\"));\n      }\n    }\n\n    const words = Object.keys(markovChain);\n    let word = words[Math.floor(Math.random() * words.length)];\n    let result = \"\";\n\n    for (let i = 0; i < words.length; i++) {\n      result += word + \" \";\n      var newWord = markovChain[word][Math.floor(Math.random() * markovChain[word].length)];\n      word = newWord;\n      if (!word || !markovChain.hasOwnProperty(word)) word = words[Math.floor(Math.random() * words.length)];\n    }\n\n    document.getElementById(\"markovResults\").innerText = result;\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(AppBar, {\n    position: \"static\",\n    style: {\n      height: 75,\n      marginBottom: 75\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Toolbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }, \"Gainz.io\"))), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h2\",\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, \"Build a customized workout!\"), /*#__PURE__*/React.createElement(FormControl, {\n    style: {\n      marginBottom: 50\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    htmlFor: \"age-native-simple\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, \"Muscle Group\"), /*#__PURE__*/React.createElement(Select, {\n    native: true,\n    style: {\n      width: 300\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    \"aria-label\": \"None\",\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"option\", {\n    value: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }, \"Upper Body\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: 20,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }, \"Lower Body\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: 30,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }, \"Core\"))), /*#__PURE__*/React.createElement(\"div\", {\n    display: \"inline-block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      position: 'relative',\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    style: {\n      marginBottom: 50\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }, \"Input text below to learn from.\"), /*#__PURE__*/React.createElement(\"input\", {\n    style: {\n      height: 200,\n      width: 500,\n      margin: 'auto',\n      marginBottom: 50\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    onClick: () => markovMe(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }, \"Click me to generate text!\")), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    id: \"markovResults\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }))));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/alexstiles/Desktop/AI/gainz/src/App.js"],"names":["React","AppBar","Toolbar","Typography","Select","FormControl","InputLabel","Button","App","markovMe","markovChain","textArr","document","getElementById","value","split","i","length","word","toLowerCase","replace","push","words","Object","keys","Math","floor","random","result","newWord","hasOwnProperty","innerText","height","marginBottom","width","position","display","flexDirection","justifyContent","margin"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Select from \"@material-ui/core/Select\"\nimport FormControl from \"@material-ui/core/FormControl\"\nimport InputLabel from \"@material-ui/core/InputLabel\"\nimport Button from \"@material-ui/core/Button\"\n\nfunction App() {\n\n  function markovMe() {\n    const markovChain = {};\n    const textArr = document.getElementById(\"inputBox\").value.split(\" \");\n    for (let i = 0; i < textArr.length; i++) {\n      let word = textArr[i].toLowerCase().replace(/[\\W_]/, \"\");\n      if (!markovChain[word]) {\n        markovChain[word] = [];\n      }\n      if (textArr[i + 1]) {\n        markovChain[word].push(\n          textArr[i + 1].toLowerCase().replace(/[\\W_]/, \"\")\n        );\n      }\n    }\n    const words = Object.keys(markovChain);\n    let word = words[Math.floor(Math.random() * words.length)];\n    let result = \"\";\n    for (let i = 0; i < words.length; i++) {\n      result += word + \" \";\n      var newWord =\n        markovChain[word][Math.floor(Math.random() * markovChain[word].length)];\n      word = newWord;\n      if (!word || !markovChain.hasOwnProperty(word))\n        word = words[Math.floor(Math.random() * words.length)];\n    }\n    document.getElementById(\"markovResults\").innerText = result;\n  }\n\n  return (\n    <div className=\"App\">\n      <AppBar position=\"static\" style={{ height: 75, marginBottom: 75 }}>\n        <Toolbar>\n          <Typography variant=\"h6\">Gainz.io</Typography>\n        </Toolbar>\n      </AppBar>\n      <Typography variant=\"h2\" align=\"center\">Build a customized workout!</Typography>\n      <FormControl style={{marginBottom: 50}}>\n        <InputLabel htmlFor=\"age-native-simple\">Muscle Group</InputLabel>\n        <Select\n          native\n          style={{width: 300}}\n        >\n          <option aria-label=\"None\" value=\"\" />\n          <option value={10}>Upper Body</option>\n          <option value={20}>Lower Body</option>\n          <option value={30}>Core</option>\n        </Select>\n      </FormControl>\n      <div display=\"inline-block\">\n        <div style={{position: 'relative', display: 'flex', flexDirection:'column', justifyContent: 'center'}}>\n          <Typography style={{marginBottom: 50}}>\n            Input text below to learn from.\n          </Typography>\n          <input style={{height: 200, width: 500, margin: 'auto', marginBottom: 50}}></input>\n          <Button onClick={() => markovMe()}>Click me to generate text!</Button>\n        </div>\n        <div>\n          <p id=\"markovResults\" />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}